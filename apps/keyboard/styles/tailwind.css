@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  *::-webkit-scrollbar {
    @apply hidden;
  }

  body {
    @apply h-full w-full overflow-x-hidden text-white antialiased selection:bg-red-300 selection:text-gray-900;
  }
  pre {
    @apply text-md relative rounded-lg bg-slate-900 p-4;
  }
  pre > * {
    @apply text-glow;
  }
  pre,
  button,
  a,
  a img {
    @apply cursor-pointer;
  }
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

:root {
  --pink: hsl(338, 70%, 55%);
  --teal: hsl(183, 70%, 62%);
  --white: hsl(334, 7%, 95%);
}
.selector {
  color: var(--pink);
}
.property {
  color: var(--teal);
}
.punctuation {
  color: var(--white);
}

pre {
  transform-style: preserve-3d;
  transform: perspective(5000px) rotateX(var(--rotateX)) rotateY(var(--rotateY));
}

pre::before,
pre::after {
  content: "";
  position: absolute;
  padding: 1rem 2rem;
  border-radius: inherit;
}

pre::after {
  inset: -1rem;
  background: linear-gradient(-45deg, red, blue);
  transform: translateZ(-50px);
}

pre::before {
  inset: 0.8rem;
  background: black;
  transform: translateZ(-49px);
  filter: blur(15px);
  opacity: 0.5;
}

pre:hover .title:not(.fancy) {
  opacity: 0.2;
}
pre:hover .punctuation {
  opacity: 0.2;
}

.title {
  transition: opacity 350ms ease;
  transition-delay: 480ms;
}
.title-word {
  @apply relative inline-block duration-300;
}

pre:hover .title-word:is(.hide) {
  opacity: 0;
}
pre:hover .title-word:is(.show):not(.punctuation) {
  animation: twinkle 700ms;
  animation-delay: 500ms;
}
@keyframes twinkle {
  from {
    opacity: 1;
  }
  25% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  75% {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@media only screen and (max-width: 2048px) {
  pre:hover .title-word:nth-child(7) {
    transform: translateX(-0.75rem);
  }
  pre:hover .title-word:nth-child(11) {
    transform: translateX(-2.8rem);
  }
  pre:hover .title-word:nth-child(12) {
    transform: translateX(-2.8rem);
  }
  pre:hover .title-word:nth-child(13) {
    transform: translateX(-2.8rem);
  }
  pre:hover .title-word:nth-child(14) {
    transform: translateX(-2.8rem);
  }
  pre:hover .title-word:nth-child(15) {
    transform: translateX(-2.8rem);
  }
  pre:hover .title-word:nth-child(17) {
    transform: translateX(-2.8rem);
  }
}
@media only screen and (max-width: 1024px) {
  pre:hover .title-word:nth-child(7) {
    transform: translateX(-0.7rem);
  }
  pre:hover .title-word:nth-child(11) {
    transform: translateX(-2.5rem);
  }
  pre:hover .title-word:nth-child(12) {
    transform: translateX(-2.5rem);
  }
  pre:hover .title-word:nth-child(13) {
    transform: translateX(-2.5rem);
  }
  pre:hover .title-word:nth-child(14) {
    transform: translateX(-2.5rem);
  }
  pre:hover .title-word:nth-child(15) {
    transform: translateX(-2.5rem);
  }
  pre:hover .title-word:nth-child(17) {
    transform: translateX(-2.5rem);
  }
}
@media only screen and (max-width: 475px) {
  pre:hover .title-word:nth-child(7) {
    transform: translateX(-0.6rem);
  }
  pre:hover .title-word:nth-child(11) {
    transform: translateX(-2.1rem);
  }
  pre:hover .title-word:nth-child(12) {
    transform: translateX(-2.1rem);
  }
  pre:hover .title-word:nth-child(13) {
    transform: translateX(-2.1rem);
  }
  pre:hover .title-word:nth-child(14) {
    transform: translateX(-2.1rem);
  }
  pre:hover .title-word:nth-child(15) {
    transform: translateX(-2.1rem);
  }
  pre:hover .title-word:nth-child(17) {
    transform: translateX(-2.1rem);
  }
}

@property --gradient-angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.modal::before,
.modal::after {
  content: "";
  position: absolute;
  inset: -0.04rem;
  z-index: -1;
  background: conic-gradient(
    from var(--gradient-angle),
    var(--pink),
    var(--teal),
    var(--white),
    var(--teal),
    var(--pink)
  );
  border-radius: inherit;
  animation: rotation 5s linear infinite;
}

.modal::after {
  filter: blur(1rem);
}

@keyframes rotation {
  0% {
    --gradient-angle: 0deg;
  }
  100% {
    --gradient-angle: 360deg;
  }
}

.login-provider {
  @apply relative inline-block opacity-0 duration-500;
}

.providers:hover .login-provider {
  @apply -translate-y-3 opacity-100;
}

@font-face {
  font-family: "NunitoSans";
  src: url("/fonts/NunitoSans-Regular.woff2") format("woff2");
  font-weight: normal;
  font-display: block;
}
@font-face {
  font-family: "LeferiPointSpecial";
  src: url("/fonts/LeferiPointSpecial.woff2") format("woff2");
  font-weight: normal;
  font-display: block;
}
@font-face {
  font-family: "LINESeedKR-Rg";
  src: url("/fonts/LINESeedKR-Rg.woff2") format("woff2");
  font-weight: normal;
  font-display: block;
}

.flipcard {
  width: 400px;
}
.flipcard:hover .flipcard_content {
  transform: rotateY(0.5turn);
}

.flipcard_content {
  text-align: center;
  position: relative;
  padding: 5rem;
  transition: transform 1s cubic-bezier(0.645, 0.045, 0.355, 1);
  background: pink;
  transform-style: preserve-3d;
}

.flipcard_front,
.flipcard_back {
  position: absolute;
  inset: 0;
  padding: 2em;
  backface-visibility: hidden;
  transform-style: preserve-3d;
}

.flipcard_front {
  background: lightgreen;
  display: grid;
}

.flipcard_back {
  transform: rotateY(0.5turn);
  background: lightblue;
  transform-style: preserve-3d;
}

.flipcard_title {
  font-size: 3rem;
  font-weight: bold;
  transform: translateZ(9rem);
  order: 2;
  text-transform: uppercase;
}

.flipcard_subtitle {
  transform: translateZ(6rem);
  text-transform: uppercase;
}
.flipcard_body {
  transform: translateZ(3rem);
}

.cursor-eyes {
  cursor: url("../public/images/cursor-see.png") 60 20, pointer;
}

.gridcards {
  display: grid;
  gap: clamp(1.5rem, 5vw - 2rem, 3rem);
  grid-template-columns: repeat(auto-fill, minmax(20rem, 1fr));
}

.gridcard {
  background: rgb(6, 19, 101);
  height: 260px;
  border-radius: 10px;
  position: relative;
}

.gridcard:hover::before,
.gridcard:hover::after {
  opacity: 1;
}

.gridcard::before,
.gridcard::after {
  position: absolute;
  border-radius: inherit;
  content: "";
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  opacity: 0;
  transition: opacity 500ms;
}

.gridcard::before {
  background: radial-gradient(
    500px circle at var(--mouse-x) var(--mouse-y),
    rgba(240, 241, 245, 0.076),
    transparent 40%
  );
  z-index: 3;
}

.gridcard::after {
  background: radial-gradient(
    500px circle at var(--mouse-x) var(--mouse-y),
    rgba(176, 165, 205, 0.789),
    transparent 40%
  );
  z-index: 1;
}

.gridcard > .gridcard_content {
  background: linear-gradient(
    135deg,
    rgba(13, 18, 23, 0.9712230215827338) 0%,
    rgb(12, 16, 36) 50%,
    rgb(10, 10, 40) 83%,
    rgb(8, 19, 65) 92%,
    rgba(13, 13, 52, 1) 100%
  );
  background-position: 0% 0%;
  background-size: 300% 300%;
  border-radius: inherit;
  margin: 1px;
  height: calc(100% - 2px);
  width: calc(100% - 2px);
  z-index: 2;
  position: relative;
  transition: background-position 200ms ease;
}

.gridcard:hover > .gridcard_content {
  background-position: 100% 100%;
}

.splitword_author {
  @apply relative inline-block translate-x-full opacity-0 duration-500;
}
.gridcard:hover .splitword_author {
  @apply translate-x-0 opacity-100;
}

.splitword_title {
  @apply relative inline-block translate-y-0 duration-500;
}
.gridcard:hover .splitword_title {
  @apply -translate-y-2 text-3xl;
}

.splitword_price {
  @apply relative inline-block duration-300;
}
.gridcard:hover .splitword_price {
  @apply animate-wiggle text-3xl;
}

.trailer {
  height: 1rem;
  width: 1rem;
  border-radius: 50%;
  z-index: 10;
  position: fixed;
  display: grid;
  place-items: center;
  left: 0;
  top: 0;
  pointer-events: none;
  transition: opacity 0.4s ease;
  mix-blend-mode: difference;
  opacity: 0;
  background: white;
}

.trailer-hover {
  width: 5rem;
  height: 5rem;
  border-radius: 50%;
  z-index: 10;
  position: fixed;
  display: grid;
  place-items: center;
  left: 0;
  top: 0;
  pointer-events: none;
  transition: all 0.4s ease;
  mix-blend-mode: color-dodge;
  opacity: 0;
  background: rgba(87, 63, 196, 0.904);
}

.trailer-circle {
  opacity: 0;
  z-index: 10;
  transition: all 1s ease;
  animation: MouseCircle 10s linear infinite;
}

body:hover .trailer,
body:hover .trailer-hover:not([data-type=""]),
.trailer-hover[data-type="circle"] .trailer-circle {
  opacity: 1;
}

.trailer-circle > span {
  font-size: 10px;
}

@keyframes MouseCircle {
  from {
    rotate: 0deg;
  }
  to {
    rotate: 360deg;
  }
}

.cursor-default {
  cursor: url("/images/cursor-default.png"), default;
}
.cursor-pointer {
  cursor: url("/images/cursor-pointer.png"), default;
}
